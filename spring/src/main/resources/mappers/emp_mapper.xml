<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.company.spring.dao.EmpMapper"> <!-- 패키지.EmpMapper -->

<!-- jobId select option -->
<select id="jobSelect" resultType="co.company.spring.dao.Jobs">
	SELECT JOB_ID, JOB_TITLE
	FROM JOBS
	ORDER BY JOB_ID
</select>

<!-- departmentId select option -->
<select id="deptSelect" resultType="co.company.spring.dao.Depts">
	SELECT DEPARTMENT_ID, DEPARTMENT_NAME
	FROM DEPARTMENTS
	ORDER BY DEPARTMENT_ID
</select>

<!-- 부서별 사원 수 부서번호, 부서명, 사원수 -->
<select id="getStatDept" resultType="map">
	SELECT A.DEPARTMENT_ID   "deptId",
		   B.DEPARTMENT_NAME "deptName",
		   COUNT(*) 		 "cnt"
	FROM EMPLOYEES A, DEPARTMENTS B
	WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID
	GROUP BY A.DEPARTMENT_ID, B.DEPARTMENT_NAME
</select>

<!-- 전체 레코드 건수 -->
<select id="getCount" resultType="int">
	SELECT COUNT(*) FROM EMPLOYEES
	<where>
		<if test="firstName != null and firstName !=''">
			upper(FIRST_NAME) like '%' || upper(#{firstName}) || '%'
		</if>
		
		<if test="departmentId != null and departmentId !=''">
			AND department_id = #{departmentId}
		</if>
		
		<if test="minSalary != null">
			<![CDATA[
				AND salary > #{minSalary}
			]]>
		</if>
		<if test="maxSalary != null">
			<![CDATA[
				AND salary < #{maxSalary}
			]]>
		</if>
	</where>
</select>

<!-- 프로시저를 이용한 등록 -->
<insert id="insertEmpProc" statementType="CALLABLE">
	{call INS_EMP1(
		#{lastName},
		#{email},
		#{jobId},
		#{msg, mode=OUT, jdbcType=VARCHAR, javaType=string},
		#{employeeId, mode=OUT, jdbcType=VARCHAR, javaType=string}
	)}
</insert>

<!-- 단건조회  -->
	<select id="getEmp" parameterType="emp" resultType="emp">
		SELECT  employee_id,
				department_id,
				salary,
		        first_name,
				last_name,
				email,
				hire_date,
				job_id
		FROM employees
		WHERE employee_id = #{employeeId}
	</select>
	
<!-- 전체조회  -->	
	<select id="getEmpList" resultType="emp">
		SELECT *
		FROM EMPLOYEES
		<where>
			<if test="firstName != null and firstName !=''">
				upper(FIRST_NAME) like '%' || upper(#{firstName}) || '%'
			</if>
			
			<if test="departmentId != null and departmentId !=''">
				AND department_id = #{departmentId}
			</if>
			
			<if test="minSalary != null">
				<![CDATA[
					AND salary > #{minSalary}
				]]>
			</if>
			<if test="maxSalary != null">
				<![CDATA[
					AND salary < #{maxSalary}
				]]>
			</if>
		</where>
		ORDER BY EMPLOYEE_ID
	</select>

<!--  사원등록    -->
	<insert id="insertEmp" parameterType="emp">
		<!-- 시퀀스 -->
		<selectKey order="BEFORE"
				   keyProperty="employeeId" 
				   resultType="string">
			SELECT MAX(employee_id)+1 
			FROM EMPLOYEES
		</selectKey>
		INSERT INTO EMPLOYEES (	employee_id, 
								first_name, 
								last_name,
								email,
								hire_date,
								job_id
								)
	 	                VALUES(
	 	               			#{employeeId},
	 	               			#{firstName},
	 	               			#{lastName},
	 	               			#{email},
	 	               			#{hireDate},
	 	               			#{jobId})
	</insert>
	
<!-- update -->
	<update id="updateEmp">
		UPDATE EMPLOYEES
		<set>
			<if test="firstName != null">first_name=#{firstName},</if>
			<if test="salary != null">salary=#{salary},</if>
		</set>
		WHERE employee_id = #{employeeId}
	</update>
	
<!-- 단건삭제 -->
	<delete id="deleteEmp">
		DELETE EMPLOYEES
		WHERE employee_id = #{employeeId}
	</delete>
	
<!-- 선택 다건 삭제 -->
	<delete id="deleteMultiEmp">
		DELETE EMPLOYEES
		WHERE employee_id IN
		<foreach collection="list" item="id"
				 open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
</mapper>
